apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "accumulo.fullname" . }}-manager
  labels:
    app: {{ template "accumulo.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ template "accumulo.fullname" . }}-manager
spec:
  selector:
    matchLabels:
      app: {{ template "accumulo.name" . }}
      component: {{ template "accumulo.fullname" . }}-manager
  serviceName: {{ template "accumulo.fullname" . }}-manager-svc
  replicas: {{ .Values.accumulo.manager.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "accumulo.name" . }}
        release: {{ .Release.Name }}
        component: {{ template "accumulo.fullname" . }}-manager
    spec:
      terminationGracePeriodSeconds: 0
      initContainers:
      - name: accumulo-init
        image: {{ .Values.accumulo.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.s3.key }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.s3.secret }}
        command:
        - "/bin/bash"
        - "/tmp/accumulo-config/init.sh"
        resources:
          requests:
            memory: 256Mi
            cpu: 0.5
        volumeMounts:
        - name: accumulo-config
          mountPath: /tmp/accumulo-config
      containers:
      # manager
      - name: accumulo-manager
        image: {{ .Values.accumulo.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.s3.key }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.s3.secret }}
        command:
        - "/bin/bash"
        - "/tmp/accumulo-config/manager.sh"
        livenessProbe:
          tcpSocket:
            port: 9999
          initialDelaySeconds: 30
          periodSeconds: 5
        resources:
{{ toYaml .Values.accumulo.manager.resources | indent 10 }}
        volumeMounts:
        - name: accumulo-config
          mountPath: /tmp/accumulo-config
      # monitor
      - name: accumulo-monitor
        image: {{ .Values.accumulo.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.s3.key }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.s3.secret }}
        command:
        - "/bin/bash"
        - "/tmp/accumulo-config/monitor.sh"
        livenessProbe:
          tcpSocket:
            port: 9995
          initialDelaySeconds: 30
          periodSeconds: 5
        resources:
{{ toYaml .Values.accumulo.monitor.resources | indent 10 }}
        volumeMounts:
        - name: accumulo-config
          mountPath: /tmp/accumulo-config
      # garbage collector
      - name: accumulo-gc
        image: {{ .Values.accumulo.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.s3.key }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.s3.secret }}
        command:
        - "/bin/bash"
        - "/tmp/accumulo-config/gc.sh"
        livenessProbe:
          tcpSocket:
            port: 9998
          initialDelaySeconds: 30
          periodSeconds: 5
        resources:
{{ toYaml .Values.accumulo.gc.resources | indent 10 }}
        volumeMounts:
        - name: accumulo-config
          mountPath: /tmp/accumulo-config
      volumes:
      - name: accumulo-config
        configMap:
          name: accumulo-configmap
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values:
                        - {{ template "accumulo.fullname" . }}-manager
                topologyKey: kubernetes.io/hostname
      tolerations:
        - key: node.kubernetes.io/not-ready
          effect: NoExecute
          tolerationSeconds: {{ .Values.accumulo.manager.tolerations.not_ready }}
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: {{ .Values.accumulo.manager.tolerations.unreachable }}